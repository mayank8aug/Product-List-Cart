{"ast":null,"code":"var _jsxFileName = \"/Users/mayankkumar/Downloads/UsersRecords/src/components/UserRecordsData.js\";\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport './UserRecordsData.css';\nconst UserRecordsData = React.memo(props => {\n  const userState = useSelector(state => state.user);\n  const sortByField = userState.sortByField,\n        sortOrder = userState.sortOrder,\n        filterQuery = userState.filterQuery;\n  let users = props.users,\n      filterableFields = props.filterableFields,\n      fields = props.fields;\n\n  if (filterQuery) {\n    users = users.filter(user => {\n      return user.data.some(field => filterableFields.includes(field.id) && field.value.toLowerCase().includes(filterQuery.toLowerCase()));\n    });\n  }\n\n  if (sortByField) {\n    users = users.sort((u1, u2) => {\n      const u1Val = u1.data.find(field => field.id === sortByField).value;\n      const u2Val = u2.data.find(field => field.id === sortByField).value;\n\n      if (u1Val < u2Val) {\n        return sortOrder === 'ASC' ? -1 : 1;\n      }\n\n      if (u1Val > u2Val) {\n        return sortOrder === 'ASC' ? 1 : -1;\n      }\n\n      return 0;\n    });\n  }\n\n  let i = 0;\n  return React.createElement(\"tbody\", {\n    className: \"user-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, users && users.map(user => {\n    return React.createElement(\"tr\", {\n      key: user.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, fields && user.data && fields.map(field => {\n      const colData = user.data.find(data => data.id === field);\n      return React.createElement(\"td\", {\n        key: \"\".concat(user.id, \"-\").concat(field),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, colData ? field.value : '');\n    }), user.data && user.data.map(field => {\n      if (field.id !== fields[i]) {\n        i = i + 2;\n        return React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          key: \"\".concat(user.id, \"-\").concat(fields[i]),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, \"\\\"\\\"\"), React.createElement(\"td\", {\n          key: \"\".concat(user.id, \"-\").concat(field.id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, field.value));\n      }\n\n      i = i + 2;\n      return React.createElement(\"td\", {\n        key: \"\".concat(user.id, \"-\").concat(field.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, field.value);\n    }));\n  }));\n});\nexport default UserRecordsData;","map":{"version":3,"sources":["/Users/mayankkumar/Downloads/UsersRecords/src/components/UserRecordsData.js"],"names":["React","useSelector","UserRecordsData","memo","props","userState","state","user","sortByField","sortOrder","filterQuery","users","filterableFields","fields","filter","data","some","field","includes","id","value","toLowerCase","sort","u1","u2","u1Val","find","u2Val","i","map","colData"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useSelector } from 'react-redux';\nimport './UserRecordsData.css';\n\nconst UserRecordsData = React.memo(props => {\n  const userState = useSelector(state => state.user);\n  const { sortByField, sortOrder, filterQuery } = userState;\n  let { users, filterableFields, fields } = props;\n\n  if (filterQuery) {\n    users = users.filter(user => {\n      return user.data.some(field => filterableFields.includes(field.id) && field.value.toLowerCase().includes(filterQuery.toLowerCase()));\n    });\n  }\n\n  if (sortByField) {\n    users = users.sort((u1, u2) => {\n      const u1Val = u1.data.find(field => field.id === sortByField).value;\n      const u2Val = u2.data.find(field => field.id === sortByField).value;\n      if (u1Val < u2Val) {\n        return sortOrder === 'ASC' ? -1 : 1;\n      }\n      if (u1Val > u2Val) {\n        return sortOrder === 'ASC' ? 1 : -1;\n      }\n      return 0;\n    });\n  }\n\n  let i = 0;\n  \n  return (\n    <tbody className=\"user-list\">\n      {users &&\n        users.map(user => {\n          return (\n            <tr key={user.id}>\n              { fields && user.data && fields.map(field => {\n                const colData = user.data.find(data => data.id === field);\n                return <td key={`${user.id}-${field}`}>{colData ? field.value : ''}</td>\n              })}\n              {user.data &&\n                user.data.map(field => {\n                  if (field.id !== fields[i]) {\n                    i = i + 2;\n                    return <React.Fragment>\n                      <td key={`${user.id}-${fields[i]}`}>\"\"</td>\n                      <td key={`${user.id}-${field.id}`}>{field.value}</td>\n                    </React.Fragment>\n                  }\n                  i = i + 2;\n                  return <td key={`${user.id}-${field.id}`}>{field.value}</td>;\n                })}\n            </tr>\n          );\n        })}\n    </tbody>\n  );\n});\n\nexport default UserRecordsData;\n"]},"metadata":{},"sourceType":"module"}