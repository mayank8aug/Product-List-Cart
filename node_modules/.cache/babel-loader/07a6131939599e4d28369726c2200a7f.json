{"ast":null,"code":"const initialState = {\n  filterQuery: '',\n  productList: [],\n  cartQty: 0,\n  cartPrice: 0,\n  cartProducts: []\n};\nlet prevCartProducts;\n\nconst product = (prevState = initialState, action) => {\n  switch (action.type) {\n    case 'SET_FILTER_QUERY':\n      return Object.assign({}, prevState, {\n        filterQuery: action.query\n      });\n\n    case 'SET_PRODUCT_LIST':\n      return Object.assign({}, prevState, {\n        productList: action.productList\n      });\n\n    case 'ADD_TO_CART':\n      const _action$product = action.product,\n            mrp = _action$product.mrp,\n            skuCode = _action$product.skuCode;\n      let prevCartProducts = prevState.cartProducts;\n\n      if (cartProducts[skuCode]) {\n        cartProducts[skuCode] += 1;\n      } else {\n        cartProducts[skuCode] = 1;\n      }\n\n      return Object.assign({}, prevState, {\n        cartQty: prevState.cartQty + 1,\n        cartPrice: prevState.cartPrice + mrp,\n        cartProducts\n      });\n\n    case 'REMOVE_FROM_CART':\n      let cartProducts = prevState.cartProducts;\n      cartProducts[action.product.skuCode] -= 1;\n      return Object.assign({}, prevState, {\n        cartQty: prevState.cartQty - 1,\n        cartPrice: prevState.cartPrice - action.product.mrp,\n        cartProducts\n      });\n\n    default:\n      return prevState;\n  }\n};\n\nexport default product;","map":{"version":3,"sources":["/Users/mayankkumar/Documents/Product-List-Cart/src/reducers/product.js"],"names":["initialState","filterQuery","productList","cartQty","cartPrice","cartProducts","prevCartProducts","product","prevState","action","type","Object","assign","query","mrp","skuCode"],"mappings":"AAAA,MAAMA,YAAY,GAAG;AACnBC,EAAAA,WAAW,EAAE,EADM;AAEnBC,EAAAA,WAAW,EAAE,EAFM;AAGnBC,EAAAA,OAAO,EAAE,CAHU;AAInBC,EAAAA,SAAS,EAAE,CAJQ;AAKnBC,EAAAA,YAAY,EAAE;AALK,CAArB;AAOA,IAAIC,gBAAJ;;AACA,MAAMC,OAAO,GAAG,CAACC,SAAS,GAAGR,YAAb,EAA2BS,MAA3B,KAAsC;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,kBAAL;AACE,aAAOC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,SAAlB,EAA6B;AAClCP,QAAAA,WAAW,EAAEQ,MAAM,CAACI;AADc,OAA7B,CAAP;;AAGF,SAAK,kBAAL;AACE,aAAOF,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,SAAlB,EAA6B;AAClCN,QAAAA,WAAW,EAAEO,MAAM,CAACP;AADc,OAA7B,CAAP;;AAGF,SAAK,aAAL;AAAA,8BAC2BO,MAAM,CAACF,OADlC;AAAA,YACUO,GADV,mBACUA,GADV;AAAA,YACeC,OADf,mBACeA,OADf;AAEE,UAAIT,gBAAgB,GAAGE,SAAS,CAACH,YAAjC;;AACA,UAAIA,YAAY,CAACU,OAAD,CAAhB,EAA2B;AACzBV,QAAAA,YAAY,CAACU,OAAD,CAAZ,IAAyB,CAAzB;AACD,OAFD,MAEO;AACLV,QAAAA,YAAY,CAACU,OAAD,CAAZ,GAAwB,CAAxB;AACD;;AACD,aAAOJ,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,SAAlB,EAA6B;AAClCL,QAAAA,OAAO,EAAEK,SAAS,CAACL,OAAV,GAAoB,CADK;AAElCC,QAAAA,SAAS,EAAEI,SAAS,CAACJ,SAAV,GAAsBU,GAFC;AAGlCT,QAAAA;AAHkC,OAA7B,CAAP;;AAKF,SAAK,kBAAL;AACE,UAAIA,YAAY,GAAGG,SAAS,CAACH,YAA7B;AACAA,MAAAA,YAAY,CAACI,MAAM,CAACF,OAAP,CAAeQ,OAAhB,CAAZ,IAAwC,CAAxC;AACA,aAAOJ,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,SAAlB,EAA6B;AAClCL,QAAAA,OAAO,EAAEK,SAAS,CAACL,OAAV,GAAoB,CADK;AAElCC,QAAAA,SAAS,EAAEI,SAAS,CAACJ,SAAV,GAAsBK,MAAM,CAACF,OAAP,CAAeO,GAFd;AAGlCT,QAAAA;AAHkC,OAA7B,CAAP;;AAKF;AACE,aAAOG,SAAP;AA/BJ;AAiCD,CAlCD;;AAoCA,eAAeD,OAAf","sourcesContent":["const initialState = {\n  filterQuery: '',\n  productList: [],\n  cartQty: 0,\n  cartPrice: 0,\n  cartProducts: []\n};\nlet prevCartProducts;\nconst product = (prevState = initialState, action) => {\n  switch (action.type) {\n    case 'SET_FILTER_QUERY':\n      return Object.assign({}, prevState, {\n        filterQuery: action.query   \n      });\n    case 'SET_PRODUCT_LIST':\n      return Object.assign({}, prevState, {\n        productList: action.productList\n      });\n    case 'ADD_TO_CART':\n      const { mrp, skuCode } = action.product;\n      let prevCartProducts = prevState.cartProducts;\n      if (cartProducts[skuCode]) {\n        cartProducts[skuCode] += 1;   \n      } else {\n        cartProducts[skuCode] = 1;\n      }\n      return Object.assign({}, prevState, {\n        cartQty: prevState.cartQty + 1,\n        cartPrice: prevState.cartPrice + mrp,\n        cartProducts\n      });\n    case 'REMOVE_FROM_CART':\n      let cartProducts = prevState.cartProducts;\n      cartProducts[action.product.skuCode] -= 1;\n      return Object.assign({}, prevState, {\n        cartQty: prevState.cartQty - 1,\n        cartPrice: prevState.cartPrice - action.product.mrp,\n        cartProducts\n      });\n    default:\n      return prevState;\n  }\n}\n\nexport default product;"]},"metadata":{},"sourceType":"module"}