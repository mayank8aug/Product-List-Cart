{"ast":null,"code":"var _jsxFileName = \"/Users/mayankkumar/Documents/Product-List-Cart/src/components/Products.js\";\nimport React from 'react';\n/* import { useSelector } from 'react-redux'; */\n\nconst Products = React.memo(props => {\n  /* const userState = useSelector(state => state.user);\n  const { sortByField, sortOrder, filterQuery } = userState;\n  let { users, filterableFields, fields } = props;\n   if (filterQuery) {\n    users = users.filter(user => {\n      return user.data.some(field => filterableFields.includes(field.id) && field.value.toLowerCase().includes(filterQuery.toLowerCase()));\n    });\n  }\n   if (sortByField) {\n    users = users.sort((u1, u2) => {\n      const u1Val = u1.data.find(field => field.id === sortByField).value;\n      const u2Val = u2.data.find(field => field.id === sortByField).value;\n      if (u1Val < u2Val) {\n        return sortOrder === 'ASC' ? -1 : 1;\n      }\n      if (u1Val > u2Val) {\n        return sortOrder === 'ASC' ? 1 : -1;\n      }\n      return 0;\n    });\n  } */\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Hello\");\n});\nexport default Products;","map":{"version":3,"sources":["/Users/mayankkumar/Documents/Product-List-Cart/src/components/Products.js"],"names":["React","Products","memo","props"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA;;AAEA,MAAMC,QAAQ,GAAGD,KAAK,CAACE,IAAN,CAAWC,KAAK,IAAI;AACnC;;;;;;;;;;;;;;;;;;;;;AAwBA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF;AAGD,CA5BgB,CAAjB;AA8BA,eAAeF,QAAf","sourcesContent":["import React from 'react';\n/* import { useSelector } from 'react-redux'; */\n\nconst Products = React.memo(props => {\n  /* const userState = useSelector(state => state.user);\n  const { sortByField, sortOrder, filterQuery } = userState;\n  let { users, filterableFields, fields } = props;\n\n  if (filterQuery) {\n    users = users.filter(user => {\n      return user.data.some(field => filterableFields.includes(field.id) && field.value.toLowerCase().includes(filterQuery.toLowerCase()));\n    });\n  }\n\n  if (sortByField) {\n    users = users.sort((u1, u2) => {\n      const u1Val = u1.data.find(field => field.id === sortByField).value;\n      const u2Val = u2.data.find(field => field.id === sortByField).value;\n      if (u1Val < u2Val) {\n        return sortOrder === 'ASC' ? -1 : 1;\n      }\n      if (u1Val > u2Val) {\n        return sortOrder === 'ASC' ? 1 : -1;\n      }\n      return 0;\n    });\n  } */\n  \n  return (\n    <div>Hello</div>\n  );\n});\n\nexport default Products;\n"]},"metadata":{},"sourceType":"module"}